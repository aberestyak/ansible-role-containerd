---
- include_tasks: cleanup-RedHat-9-fallback-traces.yml
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version is version('9', '==') and not docker_yum_repo_url_fallback_to_8|bool

- include_tasks: setup-RedHat-9.yml
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version is version('9', '==') and docker_yum_repo_url_fallback_to_8|bool

- include_tasks: setup-RedHat.yml
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version is version('9', '<') or not docker_yum_repo_url_fallback_to_8|bool

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Include Suse-specific variables
  include_vars: Suse.yml
  when: ansible_os_family == 'Suse'

- name: Ensure containerd is installed.
  package:
    name: "{{ containerd_package }}"
    state: "{{ containerd_package_state }}"

- name: Ensure containerd is started and enabled at boot.
  service:
    name: containerd
    state: "{{ containerd_service_state }}"
    enabled: "{{ containerd_service_enabled }}"

- name: Ensure containerd config directory exists.
  file:
    path: /etc/containerd
    state: directory
    mode: '0644'
  register: containerd_dir

- name: Get defaults from containerd.
  command: containerd config default
  changed_when: false
  register: containerd_config_default
  when: containerd_config_default_write

- name: Prepare containerd/config.toml from default config
  copy:
    dest: /tmp/containerd_config.toml
    content: "{{ containerd_config_default.stdout }}"
    mode: '0644'
  when: containerd_config_default_write
  changed_when: false

- name: Set Cgroup driver to systemd
  lineinfile:
    insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]$'
    line: '            SystemdCgroup = true'
    state: present
    path: /tmp/containerd_config.toml
  when: containerd_config_default_write and containerd_config_cgroup_driver_systemd
  changed_when: false

- name: Make sure  SystemdCgroup = false is not set
  ansible.builtin.lineinfile:
    path: /tmp/containerd_config.toml
    state: absent
    line: '            SystemdCgroup = false'
  notify: restart containerd
  when: containerd_config_default_write and containerd_config_cgroup_driver_systemd
  changed_when: false

- name: Set grpc socket owner group
  replace:
    path: /tmp/containerd_config.toml
    after: '\[grpc\].*\s+address = "/run/containerd/containerd.sock"'
    regexp: '^(\s+gid = )\d+'
    replace: "\\g<1>{{ containerd_config_grpc_gid }}"
  when: containerd_config_default_write and (containerd_config_grpc_gid is defined)
  changed_when: false

- name: Set registry mirrors
  blockinfile:
    insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".registry.mirrors\]$'
    block: |8
                    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."{{ item.key }}"]
                      endpoint = ["{{ item.value }}"]
    state: present
    path: /tmp/containerd_config.toml
  when: containerd_config_default_write and ( containerd_config_registry_mirorrs | length > 0 )
  with_items: "{{ containerd_config_registry_mirorrs | dict2items }}"
  changed_when: false

- name: Copy config.toml to /etc/containerd
  copy:
    remote_src: true
    src: /tmp/containerd_config.toml
    dest: /etc/containerd/config.toml
    mode: '0644'
  notify: restart containerd
  when: containerd_config_default_write

- name: Ensure crictl config exists.
  stat:
    path: /etc/crictl.yaml
  register: containerd_crictl_config

- name: Create empty crictl config file
  file:
    path: /etc/crictl.yaml
    state: touch
    mode: '0644'
  when: not containerd_crictl_config.stat.exists

- name: Fill crictl config file
  lineinfile:
    line: "runtime-endpoint: unix:///run/containerd/containerd.sock"
    path: /etc/crictl.yaml
  when: not containerd_crictl_config.stat.exists

- name: Cleanup temporary file
  file:
    path: /tmp/containerd_config.toml
    state: absent
  changed_when: false

- name: Ensure containerd is restarted immediately if necessary.
  meta: flush_handlers
